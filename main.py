import os
import discord
from discord.ext import commands, tasks
from discord import ui
from datetime import datetime, timezone, timedelta
import asyncio
from discord import Embed
import json
import re
from discord.ui import Modal, TextInput
from My_Server import server_on

# ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Intents ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
intents = discord.Intents.default()
intents.members = True  # ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
intents.message_content = True  # ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á

# ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ reconnect=True ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
bot = commands.Bot(command_prefix="!", intents=intents, reconnect=True)

# ‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡∏∞ ID ‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
WELCOME_CHANNEL_ID = 1309509732695806023  # ‡∏ä‡πà‡∏≠‡∏á‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
WELCOME_ROLE_ID = 1306502186783473707  # ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
ANNOUNCEMENT_CHANNEL_ID = 1349837451220484266  # ‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
ADMIN_ROLE_ID = 1294266042993868863  # ID ‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö ID ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
last_announcement_message_id = None

# ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
@bot.event
async def on_member_join(member):
    guild = member.guild
    channel = guild.get_channel(WELCOME_CHANNEL_ID)

    # ‡∏î‡∏∂‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏ç‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
    invites = await guild.invites()
    used_invite = None

    for invite in invites:
        if invite.code in bot.invite_cache and invite.uses > bot.invite_cache[invite.code].uses:
            used_invite = invite
            break

    bot.invite_cache = {invite.code: invite for invite in invites}

    invite_info = f"üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: `{used_invite.url}` ‡πÇ‡∏î‡∏¢ `{used_invite.inviter}`" if used_invite else "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç"

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
    role1 = guild.get_role(WELCOME_ROLE_ID)
    role2 = guild.get_role(1306522538503045172)  # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏≠‡∏∑‡πà‡∏ô
    for role in [role1, role2]:
        if role:
            try:
                await member.add_roles(role)
            except discord.Forbidden:
                print(f"‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó {role.name}")

    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
    if channel:
        join_time = datetime.now(timezone.utc).strftime("%d/%m/%Y %H:%M:%S UTC")
        embed = discord.Embed(
            title="üëã ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå!",
            description=f"**‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:** {member.name}\n**‡πÅ‡∏ó‡πá‡∏Å:** {member.mention}\n**‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠:** {join_time}\n{invite_info}",
            color=discord.Color.green()
        )
        embed.set_thumbnail(url=member.avatar.url if member.avatar else member.default_avatar.url)
        await channel.send(embed=embed)

# ‚úÖ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å‡πÜ 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
@tasks.loop(hours=1)
async def auto_announcement():
    channel = bot.get_channel(ANNOUNCEMENT_CHANNEL_ID)
    announcement_data = load_announcement()

    if channel and announcement_data:
        title = announcement_data.get('title', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®')
        description = announcement_data.get('description', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®')
        color_input = announcement_data.get('color', '')
        thumbnail_url = announcement_data.get('thumbnail_url', None)

        # ‡∏î‡∏∂‡∏á‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
        emojis = channel.guild.emojis
        emoji_dict = {f":{emoji.name}:": str(emoji) for emoji in emojis}

        # ‡πÅ‡∏õ‡∏•‡∏á title ‡πÅ‡∏•‡∏∞ description ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏à‡∏£‡∏¥‡∏á
        for emoji_code, emoji_str in emoji_dict.items():
            title = re.sub(re.escape(emoji_code), emoji_str, title)
            description = re.sub(re.escape(emoji_code), emoji_str, description)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á description ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥
        if len(description) > 4096:
            description = description[:4093] + "..."  # ‡∏ï‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô 4096 ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° "..."

        # ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏µ Embed ‡∏´‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏µ
        color = discord.Color(int(color_input.replace('#', ''), 16)) if color_input else discord.Color.random()

        embed = discord.Embed(title=title, description=description, color=color)
        if thumbnail_url:
            embed.set_thumbnail(url=thumbnail_url)

        try:
            await channel.send(embed=embed)
            print("‚úÖ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ñ‡∏π‡∏Å‡πÇ‡∏û‡∏™‡∏ï‡πå!")
        except discord.HTTPException as e:
            print(f"‚ùå ‡∏Å‡∏≤‡∏£‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®!")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON
def load_announcement():
    try:
        with open('announcement.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå 'announcement.json'")
        return None
    except json.JSONDecodeError:
        print("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå 'announcement.json'")
        return None

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /clear ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á
@bot.tree.command(name="clear", description="üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó")
async def clear(interaction: discord.Interaction):
    admin_role = interaction.guild.get_role(ADMIN_ROLE_ID)
    if admin_role and admin_role in interaction.user.roles:
        await interaction.response.defer(ephemeral=True)
        deleted_messages = await interaction.channel.purge()
        await interaction.followup.send(f"‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡πÅ‡∏•‡πâ‡∏ß ({len(deleted_messages)} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏•‡∏ö)", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /chat ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
@bot.tree.command(name="chat", description="üì¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô")
async def chat(interaction: discord.Interaction):
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ role ‡∏Ç‡∏≠‡∏á admin ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    admin_role = interaction.guild.get_role(ADMIN_ROLE_ID)
    if admin_role and admin_role in interaction.user.roles:
        await interaction.response.send_modal(AnnouncementModal())
    else:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

class AnnouncementModal(Modal, title="üì¢ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô"):
    # ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    title_input = TextInput(label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
    description_input = TextInput(label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", style=discord.TextStyle.paragraph, placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
    color_input = TextInput(label="‡∏™‡∏µ Embed (Hex Code ‡πÄ‡∏ä‡πà‡∏ô #FF0000)", placeholder="#7289DA", required=False)
    image_url_input = TextInput(label="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)", placeholder="https://...", required=False)

    async def on_submit(self, interaction: discord.Interaction):
        # ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏µ Embed ‡∏´‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏µ
        try:
            color = discord.Color(int(self.color_input.value.replace('#', ''), 16)) if self.color_input.value else discord.Color.random()
        except:
            color = discord.Color.random()

        # ‡∏î‡∏∂‡∏á‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
        emojis = interaction.guild.emojis
        emoji_dict = {f":{emoji.name}:": str(emoji) for emoji in emojis}

        # ‡πÉ‡∏ä‡πâ regex ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà :emoji_name: ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏à‡∏£‡∏¥‡∏á
        title_text = self.title_input.value
        description_text = self.description_input.value

        # ‡πÅ‡∏õ‡∏•‡∏á title_input ‡πÅ‡∏•‡∏∞ description_input ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏à‡∏£‡∏¥‡∏á
        for emoji_code, emoji_str in emoji_dict.items():
            title_text = re.sub(re.escape(emoji_code), emoji_str, title_text)
            description_text = re.sub(re.escape(emoji_code), emoji_str, description_text)

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        embed = discord.Embed(
            title=title_text,
            description=description_text,
            color=color
        )

        # ‡∏´‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏Å URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û, ‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô Embed
        if self.image_url_input.value:
            embed.set_image(url=self.image_url_input.value)

        # ‡∏™‡πà‡∏á Embed ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
        await interaction.response.send_message(embed=embed)

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /announce ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
@bot.tree.command(name="announce", description="üì¢ ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
async def announce(interaction: discord.Interaction):
    admin_role = interaction.guild.get_role(ADMIN_ROLE_ID)
    if admin_role and admin_role in interaction.user.roles:
        announcement_data = load_announcement()

        if announcement_data:
            title = announcement_data.get('title', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®')
            description = announcement_data.get('description', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®')
            color_input = announcement_data.get('color', '#FF0000')
            thumbnail_url = announcement_data.get('thumbnail_url', None)

            # ‡∏î‡∏∂‡∏á‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
            emojis = interaction.guild.emojis
            emoji_dict = {f":{emoji.name}:": str(emoji) for emoji in emojis}

            # ‡πÅ‡∏õ‡∏•‡∏á title ‡πÅ‡∏•‡∏∞ description ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏à‡∏£‡∏¥‡∏á
            for emoji_code, emoji_str in emoji_dict.items():
                title = re.sub(re.escape(emoji_code), emoji_str, title)
                description = re.sub(re.escape(emoji_code), emoji_str, description)

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á description
            if len(description) > 4096:
                description = description[:4093] + "..."  # ‡∏ï‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 4096 ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° "..." ‡∏ó‡∏µ‡πà‡∏ó‡πâ‡∏≤‡∏¢

            # ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏µ Embed ‡∏´‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏µ
            color = discord.Color(int(color_input.replace('#', ''), 16)) if color_input else discord.Color.random()

            embed = discord.Embed(title=title, description=description, color=color)
            if thumbnail_url:
                embed.set_thumbnail(url=thumbnail_url)

            channel = interaction.guild.get_channel(ANNOUNCEMENT_CHANNEL_ID)
            if channel:
                await channel.send(embed=embed)
                await interaction.response.send_message("‚úÖ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ñ‡∏π‡∏Å‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®!", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå 'announcement.json'", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /edit_announce ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà
class EditAnnouncementModal(Modal, title="‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®"):
    title_input = TextInput(label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 45 ‡∏ï‡∏±‡∏ß)", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
    description_input = TextInput(label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®", style=discord.TextStyle.paragraph, placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
    time_input = TextInput(
        label="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô '1H', '30M', ‡∏´‡∏£‡∏∑‡∏≠ '1H30M')", 
        placeholder="‡πÄ‡∏ä‡πà‡∏ô 1H ‡∏´‡∏£‡∏∑‡∏≠ 30M ‡∏´‡∏£‡∏∑‡∏≠ 1H30M"
    )

    async def on_submit(self, interaction: discord.Interaction):
        global last_announcement_message_id

        title = self.title_input.value
        description = self.description_input.value
        time_str = self.time_input.value.strip().upper()

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
        time_pattern = re.match(r"(?:(\d+)H)?(?:(\d+)M)?", time_str)
        if not time_pattern:
            await interaction.response.send_message("‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ '1H', '30M', ‡∏´‡∏£‡∏∑‡∏≠ '1H30M'.", ephemeral=True)
            return

        hours = int(time_pattern.group(1) or 0)
        minutes = int(time_pattern.group(2) or 0)
        target_time = datetime.now() + timedelta(hours=hours, minutes=minutes)
        remaining_time = target_time - datetime.now()

        if remaining_time.total_seconds() < 0:
            await interaction.response.send_message("‚ùå ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï", ephemeral=True)
            return

        await interaction.response.send_message(
            f"‚úÖ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ {target_time.strftime('%H:%M')} ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤ {remaining_time.seconds // 3600} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á {remaining_time.seconds // 60 % 60} ‡∏ô‡∏≤‡∏ó‡∏µ!", 
            ephemeral=True)

        delay = remaining_time.total_seconds()

        # ‡∏î‡∏∂‡∏á‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
        emojis = interaction.guild.emojis
        emoji_dict = {f":{emoji.name}:": str(emoji) for emoji in emojis}

        # ‡πÅ‡∏õ‡∏•‡∏á title ‡πÅ‡∏•‡∏∞ description ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏à‡∏£‡∏¥‡∏á
        for emoji_code, emoji_str in emoji_dict.items():
            title = re.sub(re.escape(emoji_code), emoji_str, title)
            description = re.sub(re.escape(emoji_code), emoji_str, description)

        # ‡∏£‡∏≠‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        await self.wait_for_delay(delay)

        if last_announcement_message_id:
            try:
                channel = interaction.guild.get_channel(ANNOUNCEMENT_CHANNEL_ID)
                message = await channel.fetch_message(last_announcement_message_id)
                await message.delete()
            except discord.NotFound:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏î‡∏¥‡∏°!")

        embed = discord.Embed(
            title=title,
            description=description,
            color=discord.Color.red()
        )
        channel = interaction.guild.get_channel(ANNOUNCEMENT_CHANNEL_ID)
        new_message = await channel.send(embed=embed)
        last_announcement_message_id = new_message.id

    async def wait_for_delay(self, delay):
        while delay > 0:
            await asyncio.sleep(1)
            delay -= 1
            await asyncio.sleep(0)

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /edit_announce ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
@bot.tree.command(name="edit_announce", description="üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®")
async def edit_announce(interaction: discord.Interaction):
    admin_role = interaction.guild.get_role(ADMIN_ROLE_ID)
    if admin_role and admin_role in interaction.user.roles:
        await interaction.response.send_modal(EditAnnouncementModal())
    else:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
@bot.event
async def on_ready():
    print(f"‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß: {bot.user}")

    if not bot.guilds:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°")
        return

    for guild in bot.guilds:
        print(f"- {guild.name} (ID: {guild.id})")

    auto_announcement.start()

    # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏ç‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥
    guild = bot.get_guild(1293907837977755719)  # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ ID ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    invites = await guild.invites()
    bot.invite_cache = {invite.code: invite for invite in invites}

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó‡∏î‡πâ‡∏ß‡∏¢ token ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
server_on()
bot.run(os.getenv('TOKEN'))
